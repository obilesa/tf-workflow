name: Deploy Infrastructure

on:
    pull_request:
      types:
        - opened
        - synchronize
        - reopened
        - closed

jobs:
  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
            terraform_version: latest
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform validate
      id: validate
      run: terraform validate
    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan -no-color -input=false
      continue-on-error: true
    - name: Terraform Graph
      id: graph
      run: terraform graph | dot -Tsvg > graph.svg
      continue-on-error: true
    - name: Upload Graph
      id: upload-graph
      run: |
        IMGUR_LINK=$(curl -X POST -H "Authorization: Client-ID $IMGUR_CLIENT_ID" -F "image=@graph.svg" https://api.imgur.com/3/image | grep -o '"link":"[^"]*' | awk -F ':"' '{print $2}')
        echo "::set-output name=IMGUR_LINK::$IMGUR_LINK"
      shell: bash
    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
            [graph](${{ steps.upload-graph.outputs.IMGUR_LINK }})
    
